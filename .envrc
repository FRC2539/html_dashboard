if [ -z `which pip3 2> /dev/null` ]; then
    echo "pip3 must be installed"
    echo "Aborting..."
    return
fi

if [ -z `which npm 2> /dev/null` ]; then
    echo "npm must be installed"
    echo "Aborting..."
    return
fi

# Set up a virtualenv if it doesn't already exist
if [ ! -d $PWD/.venv ]; then
    wget -q --tries=10 --timeout=20 --spider http://google.com
    if [[ "$?" -ne 0 ]]; then
        echo "No internet connection available"
        echo "Aborting..."
        return
    fi
    if [ -z `which virtualenv 2> /dev/null` ]; then
        while true; do
            read -p "You do not have virtualenv installed. Should I install it using pip? " yn
            case $yn in
                [Yy]* ) sudo pip3 install virtualenv; break;;
                [Nn]* ) echo "Please install virtualenv"; return;;
                * ) echo "Answer yes or no";;
            esac
        done
    fi

    virtualenv -p python3 --no-site-packages $PWD/.venv
    $PWD/.venv/bin/pip install -U pip pynetworktables2js
    npm install nw

    ln -s $PWD/hooks/* $PWD/.git/hooks/
fi

export PATH=$PWD/.venv/bin:$PATH

# Create an update script to work around direnv hanging on subshell execution.
if [[ ! -f "$PWD/update.sh" ]]; then
    cat <<"EOF" > $PWD/update.sh
#!/bin/bash

# Automatically created by .envrc
wget -q --tries=10 --timeout=20 --spider http://google.com
if [[ "$?" -eq 0 ]]; then
    pip install -U pip pynetworktables2js
    npm update
fi
EOF
    chmod +x $PWD/update.sh
fi

(bash $PWD/update.sh > /dev/null &)
